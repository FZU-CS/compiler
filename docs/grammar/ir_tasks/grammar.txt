S -> program id ( id_lists );  compound_stmt .
id_lists -> id | id_lists , id 
compound_stmt -> begin optional_stmts end
optional_stmts -> stmts | Îµ
stmts ->  stmt | stmts; stmt 
stmt  ->  id := expr  |  compound_stmt | if bool then stmt | if bool then stmt else stmt | while bool  do stmt | repeat stmts until bool
bool ->  expr < expr 
expr -> expr + term  | expr - term | term
term -> term * factor | term / factor | factor
factor -> id | num
